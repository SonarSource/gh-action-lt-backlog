name: Build

on:
  schedule:
    - cron: "42 6 * * 1-5"
  push:
    branches:
      - master
  pull_request:

jobs:
  validate-build:
    name: Validate Dist files
    runs-on: github-ubuntu-latest-s
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | REPOX_TOKEN;

        # Restore DEV dependencies that are not present in the repo due to .gitignore of /node_modules/ to reduce the checkout size in production.
      - name: Restore dev dependencies
        env:
            NPM_CONFIG_registry: https://repox.jfrog.io/artifactory/api/npm/npm
            NPM_CONFIG_//repox.jfrog.io/artifactory/api/npm/:_authToken: ${{ fromJSON(steps.secrets.outputs.vault).REPOX_TOKEN }}
        run: npm install

      - name: Build
        run: npm run build

      - name: Validate committed files
        run: ./scripts/check-committed.sh

  test:
    name: Run tests
    runs-on: github-ubuntu-latest-s
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/github/token/{REPO_OWNER_NAME_DASH}-jira token | GITHUB_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | REPOX_TOKEN;
            development/kv/data/slack token | SLACK_TOKEN;
            development/kv/data/jira user | JIRA_USER;
            development/kv/data/jira token | JIRA_TOKEN;

        # Restore DEV dependencies that are not present in the repo due to .gitignore of /node_modules/ to reduce the checkout size in production.
      - name: Restore dev dependencies
        env:
            NPM_CONFIG_registry: https://repox.jfrog.io/artifactory/api/npm/npm
            NPM_CONFIG_//repox.jfrog.io/artifactory/api/npm/:_authToken: ${{ fromJSON(steps.secrets.outputs.vault).REPOX_TOKEN }}
        run: npm install

      - name: Run tests
        env:
            GITHUB_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).GITHUB_TOKEN }}
            SLACK_TOKEN:  ${{ fromJSON(steps.secrets.outputs.vault).SLACK_TOKEN }}
            JIRA_USER:    ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
            JIRA_TOKEN:   ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
        run: npm run test
